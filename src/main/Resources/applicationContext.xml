
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:cxf="http://cxf.apache.org/core" 

	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.mindbowser.CommonUtilities" />
	
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<import resource="springDatabase.xml" />
	<import resource="SpringMail.xml" />
	<tx:annotation-driven />
	
	
	<!-- Jax-rs provider -->
	<bean id="jacksonMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="dateFormat">
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg value="yyyy-MM-dd'T'HH:mm:ss.SZ" />
			</bean>
		</property>
		<property name="serializationInclusion">
			<util:constant
				static-field="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL" />
		</property>
	</bean>

	<bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
		<constructor-arg ref="jacksonMapper" />
	</bean>
	
	
	<!-- dozer mapping -->
	<bean id="dozerMapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>dozer-mapping.xml</value>
			</list>
		</property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:message</value>
				<value>classpath:exception</value>
				<value>classpath:application</value>
			</list>
		</property>
	</bean>
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<cxf:bus>
		<cxf:inInterceptors>
			<ref bean="tokenAuthorizationInterceptor" />
			<ref bean="loggingInInterceptor" />
		</cxf:inInterceptors>
		<cxf:outInterceptors>
			<ref bean="logOutInterceptor" />
		</cxf:outInterceptors>
		<cxf:outFaultInterceptors>
			<bean
				class="com.mindbowser.CommonUtilities.interceptor.CustomOutFaultInterceptor"></bean>
		</cxf:outFaultInterceptors>
		<cxf:properties>
			<entry key="javax.ws.rs.ext.ExceptionMapper" value-ref="customExceptionMapper" />
		</cxf:properties>
	</cxf:bus>	
	
	<jaxrs:server address="/" id="restServices">
		<jaxrs:serviceBeans>
			<ref bean="userWebService"/>
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="jsonProvider"></ref>
		</jaxrs:providers>
	</jaxrs:server>
	
		<!-- Interceptor beans -->
	<bean
		class="com.mindbowser.CommonUtilities.interceptor.TokenAuthorizationInterceptor"
		id="tokenAuthorizationInterceptor" />
	<bean class="com.mindbowser.CommonUtilities.util.ApplicationBeanUtil"
		id="applicationBeanUtil" />
	<bean class="org.apache.cxf.interceptor.LoggingInInterceptor"  id="loggingInInterceptor" />
	<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor" id="logOutInterceptor" />
	<bean class="com.mindbowser.CommonUtilities.util.PasswordUtil" id="passwordUtil" />
	
	
		<!-- Exception mapper beans -->
	<bean class="com.mindbowser.CommonUtilities.mapper.CustomExceptionMapper"
		id="customExceptionMapper" />
	
	
	<!-- web service beans -->
	<bean class="com.mindbowser.CommonUtilities.webService.UserWebServiceImpl"   id="userWebService"></bean>
   
	<!-- service beans -->
	<bean class="com.mindbowser.CommonUtilities.service.UserServiceImpl"  id="userService"></bean>
   


	<!-- Dao beans -->
	<bean class="com.mindbowser.CommonUtilities.dao.UserDaoImpl" id="userDao"></bean>
	


<bean class="com.mindbowser.CommonUtilities.service.ScheduledClass"
		id="myBean" />

 <bean id="simpleJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
      <property name="targetObject" ref="myBean" />
      <property name="targetMethod" value="printMessage" />
  </bean>
    
 <!-- Run the job every 2 seconds with initial delay of 1 second -->
<bean id="simpleTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
    <property name="jobDetail" ref="simpleJobDetail" />
    <property name="startDelay" value="1000" />
    <property name="repeatInterval" value="2000" />
</bean>   
    
<!-- Run the job every 5 seconds only on Weekends -->
<!-- <bean id="cronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    <property name="jobDetail" ref="simpleJobDetail" />
    <property name="cronExpression" value="0/5 * * ? * SAT-SUN" />
</bean>    
 -->

<!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
<bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="jobDetails">
        <list>
            <ref bean="simpleJobDetail" />
        </list>
    </property>
 
    <property name="triggers">
        <list>
            <ref bean="simpleTrigger" />
    <!--         <ref bean="cronTrigger" /> -->
        </list>
    </property>
</bean>

	
<!-- Swagger prefix -->	
<jaxrs:server address="/sw" id="swagger">
		<jaxrs:serviceBeans>
			<ref bean="swaggerResourceJSON" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="resourceWriter" />
			<ref bean="apiWriter" />
		</jaxrs:providers>
</jaxrs:server> 	
	


<!-- Swagger API listing resource -->
    <bean id="swaggerResourceJSON" 
        class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />

    <!-- Swagger writers -->
    <bean id="resourceWriter"
        class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />
    <bean id="apiWriter"
        class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />

    <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
        <property name="resourcePackage" value="com.mindbowser.CommonUtilities" />
        <property name="version" value="2.0" />
        <property name="title" value="Swagger UI Integration Sample" />
        <property name="description"
            value="Swagger UI Integration Sample for demonstrating its working." />
        <property name="scan" value="true" />
    </bean>


</beans>
